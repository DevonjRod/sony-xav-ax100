#
# qmake configuration for building with arm-linux-gnueabi-g++
#

MAKEFILE_GENERATOR      = UNIX
CONFIG                 += incremental
QMAKE_INCREMENTAL_STYLE = sublib

include(../../common/linux.conf)
include(../../common/gcc-base-unix.conf)
include(../../common/g++-unix.conf)

load(device_config)

# modifications to g++.conf
QMAKE_CC                = $${CROSS_COMPILE}gcc
QMAKE_CXX               = $${CROSS_COMPILE}g++
QMAKE_LINK              = $${QMAKE_CXX}
QMAKE_LINK_SHLIB        = $${QMAKE_CXX}

# modifications to linux.conf
QMAKE_AR                = $${CROSS_COMPILE}ar cqs
QMAKE_OBJCOPY           = $${CROSS_COMPILE}objcopy
QMAKE_NM                = $${CROSS_COMPILE}nm -P
QMAKE_STRIP             = $${CROSS_COMPILE}strip

QMAKE_CFLAGS           += -march=armv7-a -mthumb-interwork -mthumb
QMAKE_CXXFLAGS          += -march=armv7-a -mthumb-interwork -mthumb

#include path
QMAKE_INCDIR            += $$QT_SYSROOT/include
QMAKE_INCDIR            += $$QT_SYSROOT/lib/dbus-1.0/include
QMAKE_INCDIR            += $$QT_SYSROOT/include/dbus-1.0
QMAKE_INCDIR            += $$QT_SYSROOT/include/freetype2
QMAKE_INCDIR            += $$QT_SYSROOT/include/directfb


#include lib
QMAKE_LIBDIR             += $$QT_SYSROOT/lib
#QMAKE_LIBDIR             += $$QT_SYSROOT/lib/directfb-1.6-0
#QMAKE_LIBDIR             += $$QT_SYSROOT/lib/directfb-1.6-0-pure

#flag
QMAKE_LFLAGS += -Wl,-rpath-link=$$QT_SYSROOT/lib

#directfb
#QMAKE_CFLAGS_DIRECTFB = "-I$QT_SYSROOT/include/directfb -D_REENTRANT"
#QMAKE_LIBS_DIRECTFB = "-L$$QT_SYSROOT/lib/directfb-1.6-0 -L$$QT_SYSROOT/lib/directfb-1.6-0-pure -ldirect -ldirectfb -lfusion  -lturbojpeg -ljpeg"


load(qt_config)
